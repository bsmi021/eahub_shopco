version: '2.1'

services:
  #redis:
  #  container_name: redis
  #  image: redis
  #  ports:
  #    - "6379:6379"
  #  healthcheck:
  #    test: exit 0
  #  restart: always

  rabbit:
    #image: rabbitmq
    build: queue
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always

  querydb_orders:
    build: orders/query_db/
    ports:
      - "27020:27017"
    restart: always

  commanddb_orders:
    build: orders/command_db/
    ports:
      - "5440:5432"
    healthcheck:
      test: exit 0
    restart: always

  orders_service:
    build:
      context:
        orders
    environment:
      - RABBIT_PASSWORD=guest
      - RABBIT_USER=guest
      - RABBIT_HOST=rabbit
      - RABBIT_PORT=5672
      - DB_PASSWORD=password
      - DB_USER=postgres
      - DB_HOST=commanddb_orders
      - DB_NAME=orders
      - PYTHONPATH=.
      - MONGO_HOST=querydb_orders
      - MONGO_PORT=27017
      - MONGO_DATABASE=orders
    depends_on:
      - querydb_orders
      - commanddb_orders
      - rabbit
    links:
      - querydb_orders
      - commanddb_orders
      - rabbit
    restart: always

  orchestrator:
    build:
      context: orchestrator
    environment:
      #APP_SETTINGS: "orchestrator.config.ProductionConfig"
      RABBIT_PASSWORD: "guest"
      RABBIT_USER: "guest"
      RABBIT_HOST: "rabbit"
      RABBIT_PORT: "5672"
      PYTHONPATH: "."
    ports:
      - "5000:5000"
    depends_on:
      - rabbit
      - orders_service


