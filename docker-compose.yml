version: "2.1"
services:

  #  nifi:
  #    image: apache/nifi
  #    hostname: nifi
  #    ports:
  #      - "18080:8080"

  redis:
    image: redis:4-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    healthcheck:
      test: exit 0

  querydb_customers:
    build: customers/query_db/
    ports:
      - "27019:27017"
    restart: always

  commanddb_customers:
    build: customers/command_db/
    ports:
      - "5439:5432"
    healthcheck:
      test: exit 0
    restart: always

  orders_db:
    image: postgres
    hostname: orders_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: orders
      POSTGRES_PASSWORD: "password"
      POSTGRES_USER: "postgres"
      restart: always

  users_db:
    build: ./users/db
    ports:
      - 5436:5432
    environment:
      POSTGRES_PASSWORD: "password"
      POSTGRES_USER: "postgres"
      restart: always
    healthcheck:
      test: exit 0

  rabbit:
    image: rabbit
    build: queue
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always

  users_service:
    image: users_service
    build: ./users
    environment:
      - APP_RD_ADDRESS=redis:6379
      - APP_RD_AUTH=password
      - APP_RD_DBNAME=5
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:password@users_db:5432/users_prod?sslmode=disable
      - DATABASE_DEV_URL=postgres://postgres:password@users_db:5432/users_dev?sslmode=disable
      - DATABASE_TEST_URL=postgres://postgres:password@users_db:5432/users_test?sslmode=disable
    depends_on:
      users_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    links:
      - users_db
      - redis

  orders:
    build:
      context: orders
    depends_on:
      - orders_db
      - rabbit
    environment:
      RABBIT_PASSWORD: "guest"
      RABBIT_USER: "guest"
      RABBIT_HOST: "rabbit"
      RABBIT_PORT: "5672"
      DB_PASSWORD: "password"
      DB_USER: "postgres"
      DB_HOST: "orders_db"
      DB_NAME: "orders"
      PYTHONPATH: "."

  basket:
    build:
      context: basket
    depends_on:
      - rabbit
    environment:
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      RABBIT_PASSWORD: "guest"
      RABBIT_USER: "guest"
      RABBIT_HOST: "rabbit"
      RABBIT_PORT: "5672"

  payment:
    build:
      context: payment
    depends_on:
      - rabbit
    environment:
      RABBIT_PASSWORD: "guest"
      RABBIT_USER: "guest"
      RABBIT_HOST: "rabbit"
      RABBIT_PORT: "5672"

  customers_service:
    build:
      context:
        customers
    environment:
      - RABBIT_PASSWORD=guest
      - RABBIT_USER=guest
      - RABBIT_HOST=rabbit
      - RABBIT_PORT=5672
      - DB_PASSWORD=password
      - DB_USER=postgres
      - DB_HOST=commanddb_customers
      - DB_NAME=customers
      - PYTHONPATH=.
      - MONGO_HOST=querydb_customers
      - MONGO_PORT=27017
      - MONGO_DATABASE=customers
    depends_on:
      - querydb_customers
      - commanddb_customers
      - rabbit
    links:
      - querydb_customers
      - commanddb_customers
      - rabbit
    restart: always

  querydb_catalog:
    build: catalog/query_db/
    ports:
      - "27018:27017"
    restart: always

  commanddb_catalog:
    build: catalog/command_db/
    ports:
      - "5435:5432"
    healthcheck:
      test: exit 0
    restart: always

  catalog_service:
    build:
      context:
        catalog
    environment:
      - RABBIT_PASSWORD=guest
      - RABBIT_USER=guest
      - RABBIT_HOST=rabbit
      - RABBIT_PORT=5672
      - DB_PASSWORD=password
      - DB_USER=postgres
      - DB_HOST=commanddb_catalog
      - DB_NAME=catalog
      - PYTHONPATH=.
      - MONGO_HOST=querydb_catalog
      - MONGO_PORT=27017
      - MONGO_DATABASE=catalog
    depends_on:
      - querydb_catalog
      - commanddb_catalog
      - rabbit
    links:
      - querydb_catalog
      - commanddb_catalog
      - rabbit
    restart: always


  gateway:
    build:
      context: gateway
    depends_on:
      - rabbit
    ports:
      - "8000:8000"
    environment:
      RABBIT_PASSWORD: "guest"
      RABBIT_USER: "guest"
      RABBIT_HOST: "rabbit"
      RABBIT_PORT: "5672"
      PYTHONPATH: "."

  orchestrator:
    build:
      context: orchestrator
    environment:
      APP_SETTINGS: "orchestrator.config.ProductionConfig"
      RABBIT_PASSWORD: "guest"
      RABBIT_USER: "guest"
      RABBIT_HOST: "rabbit"
      RABBIT_PORT: "5672"
      PYTHONPATH: "."
    ports:
      - "5000:5000"
    depends_on:
      - rabbit
      - customers_service
      - catalog_service

  proxy:
    build:
      context: nginx
    ports:
      - "8080:80"
    depends_on:
      - orchestrator
      - users_service


volumes:
  redis-data: