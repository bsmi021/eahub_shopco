version: "2.1"
services:

  kafka:
    image: kafka
    build: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "3030:3030"
    restart: always
    healthcheck:
      test: exit 0

  nifi:
    image: nifi
    build: nifi
    hostname: nifi
    ports:
      - "28080:8080"
    depends_on:
      - kafka
    restart: always

  redis:
    image: redis:4-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    healthcheck:
      test: exit 0

  querydb:
    build: customers/query_db/
    ports:
      - "27017:27017"
    restart: always

  commanddb:
    build: command_db/
    ports:
      - "5432:5432"
    healthcheck:
      test: exit 0
    restart: always

  rabbit:
    image: rabbit
    build: queue
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always

  orders_service:
    build:
      context:
        orders
    environment:
      - RABBIT_PASSWORD=guest
      - RABBIT_USER=guest
      - RABBIT_HOST=rabbit
      - RABBIT_PORT=5672
      - DB_PASSWORD=password
      - DB_USER=postgres
      - DB_HOST=commanddb
      - DB_NAME=orders
      - PYTHONPATH=.
      - MONGO_HOST=querydb
      - MONGO_PORT=27017
      - MONGO_DATABASE=orders
    depends_on:
      - querydb
      - commanddb
      - rabbit
    links:
      - querydb
      - commanddb
      - rabbit
    restart: always

  basket_service:
    build:
      context: basket
    depends_on:
      - rabbit
    environment:
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      RABBIT_PASSWORD: "guest"
      RABBIT_USER: "guest"
      RABBIT_HOST: "rabbit"
      RABBIT_PORT: "5672"
    restart: always

  payment_service:
    build:
      context: payment
    depends_on:
      - rabbit
    environment:
      RABBIT_PASSWORD: "guest"
      RABBIT_USER: "guest"
      RABBIT_HOST: "rabbit"
      RABBIT_PORT: "5672"
    restart: always

  customers_service:
    build:
      context:
        customers
    environment:
      - RABBIT_PASSWORD=guest
      - RABBIT_USER=guest
      - RABBIT_HOST=rabbit
      - RABBIT_PORT=5672
      - DB_PASSWORD=password
      - DB_USER=postgres
      - DB_HOST=commanddb
      - DB_NAME=customers
      - PYTHONPATH=.
      - MONGO_HOST=querydb
      - MONGO_PORT=27017
      - MONGO_DATABASE=customers
    depends_on:
      - querydb
      - commanddb
      - rabbit
    links:
      - querydb
      - commanddb
      - rabbit
    restart: always

  catalog_service:
    build:
      context:
        catalog
    environment:
      - RABBIT_PASSWORD=guest
      - RABBIT_USER=guest
      - RABBIT_HOST=rabbit
      - RABBIT_PORT=5672
      - DB_PASSWORD=password
      - DB_USER=postgres
      - DB_HOST=commanddb
      - DB_NAME=catalog
      - PYTHONPATH=.
      - MONGO_HOST=querydb
      - MONGO_PORT=27017
      - MONGO_DATABASE=catalog
    depends_on:
      - querydb
      - commanddb
      - rabbit
    links:
      - querydb
      - commanddb
      - rabbit
    restart: always

  warehouse_service:
    build:
      context:
        warehouse
    environment:
      - RABBIT_PASSWORD=guest
      - RABBIT_USER=guest
      - RABBIT_HOST=rabbit
      - RABBIT_PORT=5672
      - DB_PASSWORD=password
      - DB_USER=postgres
      - DB_HOST=commanddb
      - DB_NAME=warehouse
      - PYTHONPATH=.
      - MONGO_HOST=querydb
      - MONGO_PORT=27017
      - MONGO_DATABASE=warehouse
    depends_on:
      - querydb
      - commanddb
      - rabbit
    links:
      - querydb
      - commanddb
      - rabbit
    restart: always

  orchestrator:
    build:
      context: orchestrator
    environment:
      RABBIT_PASSWORD: "guest"
      RABBIT_USER: "guest"
      RABBIT_HOST: "rabbit"
      RABBIT_PORT: "5672"
      PYTHONPATH: "."
    ports:
      - "5000:5000"
    depends_on:
      - rabbit
      - customers_service
      - catalog_service
      - basket_service
    restart: always

  proxy:
    build:
      context: nginx
    ports:
      - "8080:80"
    depends_on:
      - orchestrator
    restart: always


volumes:
  redis-data: